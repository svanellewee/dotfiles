#!/usr/bin/env bash
alias l='ls -CF'
alias la='ls -A'
alias ll='ls -hlart'
alias ls='ls --color=auto'
alias x='exit'

alias gommit='git commit -m'
alias gadd='git add'
alias gstatus='git status'
alias gtree='git log --oneline --decorate --graph'

function gfin {
  git pull --rebase
  git rebase -i
  git push origin HEAD:master
}

function gbranch {
	git checkout -b "${1}" origin/master
}

function fork-repo() {
	local e="${1##*/}"
	local repodir="${e%%.git}"
	git clone "${1}"
	cd "${repo_dir}"
	git config user.name svanellewee
	git config user.email stephan.van.ellewee@gmail.com
	git remote add upstream "${2}"
}

#bind 'set show-all-if-ambiguous on'
#bind 'TAB:menu-complete'

# Golang
export GOROOT=/home/stephan/applications/go
export PATH=$PATH:$GOROOT/bin
export GOPATH=/home/stephan/source/gopath
export PATH=$PATH:$GOPATH/bin
TMUX_PATH="/home/stephan/applications/tmux/bin/" 
if [[ -d "${TMUX_PATH}" ]]; then
	PATH=$PATH:${TMUX_PATH}
fi


CTERM="\e[0m"
GREEN="\e[32m"
RED="\e[31m"
BLUE="\e[34m"
CYAN="\e[36m"

function _c() {
   echo -e "$1"
}

function _clr() {
   echo -e "${CTERM}"
}

function _sve_git_changes() {
   local CHANGES
   CHANGES="$(git diff-index HEAD | wc -l)"
   if [[ "${CHANGES}" != "0" ]] ; then 
	   echo ": ${CHANGES} changes"
   else
	   echo ""
   fi
}

function _sve_git_branch() {
	local BRANCH_NAME
	BRANCH_NAME="$(git rev-parse --abbrev-ref HEAD 2>/dev/null)"
	if [[ -n "${BRANCH_NAME}" ]]; then
		echo "[$(_c "${RED}")${BRANCH_NAME}$(_sve_git_changes)$(_clr)]"

	else
		echo ""
	fi
}

# Remember to use \[ for non printing chars! 
#  https://unix.stackexchange.com/questions/28827/why-is-my-bash-prompt-getting-bugged-when-i-browse-the-history?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa
PS1='\[$(_c "${GREEN}")\][\A]\[$(_clr)\]$(_sve_git_branch)\n\[$(_c "${CYAN}")\]\u\[$(_clr)\]:\w \$ '

# Taken from https://www.digitalocean.com/community/tutorials/how-to-use-bash-history-commands-and-expansions-on-a-linux-vps
HISTSIZE=5000
HISTFILESIZE=10000
shopt -s histappend
# append history, clear history file and re-read history
export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"  

function l33t() {
	echo "${1}" | tr -t 'aeio' '@310'
}
